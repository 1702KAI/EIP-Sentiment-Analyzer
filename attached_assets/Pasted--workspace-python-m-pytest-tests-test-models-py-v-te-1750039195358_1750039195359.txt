~/workspace$ python -m pytest tests/test_models.py -v
=========================================== test session starts ===========================================
platform linux -- Python 3.11.10, pytest-8.4.0, pluggy-1.6.0 -- /home/runner/workspace/.pythonlibs/bin/python
cachedir: .pytest_cache
rootdir: /home/runner/workspace
configfile: pytest.ini
plugins: anyio-4.9.0, Flask-Dance-7.1.0, cov-6.2.1, flask-1.3.0
collected 13 items                                                                                        

tests/test_models.py::TestUserModel::test_user_creation PASSED                                      [  7%]
tests/test_models.py::TestUserModel::test_admin_user_creation PASSED                                [ 15%]
tests/test_models.py::TestUserModel::test_user_string_representation FAILED                         [ 23%]
tests/test_models.py::TestAnalysisJobModel::test_job_creation PASSED                                [ 30%]
tests/test_models.py::TestAnalysisJobModel::test_job_status_updates PASSED                          [ 38%]
tests/test_models.py::TestAnalysisJobModel::test_job_completion PASSED                              [ 46%]
tests/test_models.py::TestEIPSentimentModel::test_eip_sentiment_creation FAILED                     [ 53%]
tests/test_models.py::TestEIPSentimentModel::test_eip_sentiment_filtering FAILED                    [ 61%]
tests/test_models.py::TestEIPSentimentModel::test_negative_sentiment_filtering FAILED               [ 69%]
tests/test_models.py::TestOutputFileModel::test_output_file_creation FAILED                         [ 76%]
tests/test_models.py::TestOutputFileModel::test_job_output_relationship FAILED                      [ 84%]
tests/test_models.py::TestModelValidation::test_unique_user_email PASSED                            [ 92%]
tests/test_models.py::TestModelValidation::test_eip_job_index FAILED                                [100%]

================================================ FAILURES =================================================
______________________________ TestUserModel.test_user_string_representation ______________________________

self = <test_models.TestUserModel object at 0x7f09965ba450>, admin_user = <User test-admin-123>

    def test_user_string_representation(self, admin_user):
        """Test user string representation"""
>       assert admin_user.email in str(admin_user) or admin_user.id in str(admin_user)
               ^^^^^^^^^^^^^^^^

tests/test_models.py:48: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
.pythonlibs/lib/python3.11/site-packages/sqlalchemy/orm/attributes.py:566: in __get__
    return self.impl.get(state, dict_)  # type: ignore[no-any-return]
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^
.pythonlibs/lib/python3.11/site-packages/sqlalchemy/orm/attributes.py:1086: in get
    value = self._fire_loader_callables(state, key, passive)
            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
.pythonlibs/lib/python3.11/site-packages/sqlalchemy/orm/attributes.py:1116: in _fire_loader_callables
    return state._load_expired(state, passive)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
.pythonlibs/lib/python3.11/site-packages/sqlalchemy/orm/state.py:803: in _load_expired
    self.manager.expired_attribute_loader(self, toload, passive)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

mapper = <Mapper at 0x7f0996ece390; User>
state = <sqlalchemy.orm.state.InstanceState object at 0x7f0996969250>
attribute_names = {'created_at', 'email', 'first_name', 'id', 'is_admin', 'last_name', ...}
passive = symbol('PASSIVE_OFF')

    def load_scalar_attributes(mapper, state, attribute_names, passive):
        """initiate a column-based attribute refresh operation."""
    
        # assert mapper is _state_mapper(state)
        session = state.session
        if not session:
>           raise orm_exc.DetachedInstanceError(
                "Instance %s is not bound to a Session; "
                "attribute refresh operation cannot proceed" % (state_str(state))
            )
E           sqlalchemy.orm.exc.DetachedInstanceError: Instance <User at 0x7f099656ee90> is not bound to a Session; attribute refresh operation cannot proceed (Background on this error at: https://sqlalche.me/e/20/bhk3)

.pythonlibs/lib/python3.11/site-packages/sqlalchemy/orm/loading.py:1603: DetachedInstanceError
____________________________ TestEIPSentimentModel.test_eip_sentiment_creation ____________________________

self = <test_models.TestEIPSentimentModel object at 0x7f09965bb8d0>, test_app = <Flask 'app'>
analysis_job = <AnalysisJob test-job-789>

    def test_eip_sentiment_creation(self, test_app, analysis_job):
        """Test creating EIP sentiment data"""
        with test_app.app_context():
            sentiment = EIPSentiment()
>           sentiment.job_id = analysis_job.id
                               ^^^^^^^^^^^^^^^

tests/test_models.py:123: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
.pythonlibs/lib/python3.11/site-packages/sqlalchemy/orm/attributes.py:566: in __get__
    return self.impl.get(state, dict_)  # type: ignore[no-any-return]
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^
.pythonlibs/lib/python3.11/site-packages/sqlalchemy/orm/attributes.py:1086: in get
    value = self._fire_loader_callables(state, key, passive)
            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
.pythonlibs/lib/python3.11/site-packages/sqlalchemy/orm/attributes.py:1116: in _fire_loader_callables
    return state._load_expired(state, passive)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
.pythonlibs/lib/python3.11/site-packages/sqlalchemy/orm/state.py:803: in _load_expired
    self.manager.expired_attribute_loader(self, toload, passive)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

mapper = <Mapper at 0x7f09968751d0; AnalysisJob>
state = <sqlalchemy.orm.state.InstanceState object at 0x7f099690ffb0>
attribute_names = {'completed_at', 'created_at', 'error_message', 'filename', 'id', 'original_filename', ...}
passive = symbol('PASSIVE_OFF')

    def load_scalar_attributes(mapper, state, attribute_names, passive):
        """initiate a column-based attribute refresh operation."""
    
        # assert mapper is _state_mapper(state)
        session = state.session
        if not session:
>           raise orm_exc.DetachedInstanceError(
                "Instance %s is not bound to a Session; "
                "attribute refresh operation cannot proceed" % (state_str(state))
            )
E           sqlalchemy.orm.exc.DetachedInstanceError: Instance <AnalysisJob at 0x7f099616e550> is not bound to a Session; attribute refresh operation cannot proceed (Background on this error at: https://sqlalche.me/e/20/bhk3)

.pythonlibs/lib/python3.11/site-packages/sqlalchemy/orm/loading.py:1603: DetachedInstanceError
___________________________ TestEIPSentimentModel.test_eip_sentiment_filtering ____________________________

self = <test_models.TestEIPSentimentModel object at 0x7f09965bbbd0>, test_app = <Flask 'app'>
eip_sentiment_data = [<EIPSentiment 1>, <EIPSentiment 2>, <EIPSentiment 3>]
analysis_job = <AnalysisJob test-job-789>

    def test_eip_sentiment_filtering(self, test_app, eip_sentiment_data, analysis_job):
        """Test filtering EIP sentiment data"""
        with test_app.app_context():
            # Filter by status
            final_eips = EIPSentiment.query.filter_by(
>               job_id=analysis_job.id, status='Final'
                       ^^^^^^^^^^^^^^^
            ).all()

tests/test_models.py:151: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
.pythonlibs/lib/python3.11/site-packages/sqlalchemy/orm/attributes.py:566: in __get__
    return self.impl.get(state, dict_)  # type: ignore[no-any-return]
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^
.pythonlibs/lib/python3.11/site-packages/sqlalchemy/orm/attributes.py:1086: in get
    value = self._fire_loader_callables(state, key, passive)
            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
.pythonlibs/lib/python3.11/site-packages/sqlalchemy/orm/attributes.py:1116: in _fire_loader_callables
    return state._load_expired(state, passive)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
.pythonlibs/lib/python3.11/site-packages/sqlalchemy/orm/state.py:803: in _load_expired
    self.manager.expired_attribute_loader(self, toload, passive)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

mapper = <Mapper at 0x7f09968751d0; AnalysisJob>
state = <sqlalchemy.orm.state.InstanceState object at 0x7f099690eff0>
attribute_names = {'completed_at', 'created_at', 'error_message', 'filename', 'id', 'original_filename', ...}
passive = symbol('PASSIVE_OFF')

    def load_scalar_attributes(mapper, state, attribute_names, passive):
        """initiate a column-based attribute refresh operation."""
    
        # assert mapper is _state_mapper(state)
        session = state.session
        if not session:
>           raise orm_exc.DetachedInstanceError(
                "Instance %s is not bound to a Session; "
                "attribute refresh operation cannot proceed" % (state_str(state))
            )
E           sqlalchemy.orm.exc.DetachedInstanceError: Instance <AnalysisJob at 0x7f09965a2f90> is not bound to a Session; attribute refresh operation cannot proceed (Background on this error at: https://sqlalche.me/e/20/bhk3)

.pythonlibs/lib/python3.11/site-packages/sqlalchemy/orm/loading.py:1603: DetachedInstanceError
_________________________ TestEIPSentimentModel.test_negative_sentiment_filtering _________________________

self = <test_models.TestEIPSentimentModel object at 0x7f09965a2f50>, test_app = <Flask 'app'>
eip_sentiment_data = [<EIPSentiment 1>, <EIPSentiment 2>, <EIPSentiment 3>]
analysis_job = <AnalysisJob test-job-789>

    def test_negative_sentiment_filtering(self, test_app, eip_sentiment_data, analysis_job):
        """Test filtering EIPs with negative sentiment"""
        with test_app.app_context():
            negative_eips = EIPSentiment.query.filter(
>               EIPSentiment.job_id == analysis_job.id,
                                       ^^^^^^^^^^^^^^^
                EIPSentiment.unified_compound < 0
            ).all()

tests/test_models.py:167: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
.pythonlibs/lib/python3.11/site-packages/sqlalchemy/orm/attributes.py:566: in __get__
    return self.impl.get(state, dict_)  # type: ignore[no-any-return]
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^
.pythonlibs/lib/python3.11/site-packages/sqlalchemy/orm/attributes.py:1086: in get
    value = self._fire_loader_callables(state, key, passive)
            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
.pythonlibs/lib/python3.11/site-packages/sqlalchemy/orm/attributes.py:1116: in _fire_loader_callables
    return state._load_expired(state, passive)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
.pythonlibs/lib/python3.11/site-packages/sqlalchemy/orm/state.py:803: in _load_expired
    self.manager.expired_attribute_loader(self, toload, passive)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

mapper = <Mapper at 0x7f09968751d0; AnalysisJob>
state = <sqlalchemy.orm.state.InstanceState object at 0x7f09961df7d0>
attribute_names = {'completed_at', 'created_at', 'error_message', 'filename', 'id', 'original_filename', ...}
passive = symbol('PASSIVE_OFF')

    def load_scalar_attributes(mapper, state, attribute_names, passive):
        """initiate a column-based attribute refresh operation."""
    
        # assert mapper is _state_mapper(state)
        session = state.session
        if not session:
>           raise orm_exc.DetachedInstanceError(
                "Instance %s is not bound to a Session; "
                "attribute refresh operation cannot proceed" % (state_str(state))
            )
E           sqlalchemy.orm.exc.DetachedInstanceError: Instance <AnalysisJob at 0x7f09968e9410> is not bound to a Session; attribute refresh operation cannot proceed (Background on this error at: https://sqlalche.me/e/20/bhk3)

.pythonlibs/lib/python3.11/site-packages/sqlalchemy/orm/loading.py:1603: DetachedInstanceError
______________________________ TestOutputFileModel.test_output_file_creation ______________________________

self = <test_models.TestOutputFileModel object at 0x7f09965a35d0>, test_app = <Flask 'app'>
analysis_job = <AnalysisJob test-job-789>

    def test_output_file_creation(self, test_app, analysis_job):
        """Test creating output file records"""
        with test_app.app_context():
            output_file = OutputFile()
>           output_file.job_id = analysis_job.id
                                 ^^^^^^^^^^^^^^^

tests/test_models.py:181: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
.pythonlibs/lib/python3.11/site-packages/sqlalchemy/orm/attributes.py:566: in __get__
    return self.impl.get(state, dict_)  # type: ignore[no-any-return]
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^
.pythonlibs/lib/python3.11/site-packages/sqlalchemy/orm/attributes.py:1086: in get
    value = self._fire_loader_callables(state, key, passive)
            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
.pythonlibs/lib/python3.11/site-packages/sqlalchemy/orm/attributes.py:1116: in _fire_loader_callables
    return state._load_expired(state, passive)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
.pythonlibs/lib/python3.11/site-packages/sqlalchemy/orm/state.py:803: in _load_expired
    self.manager.expired_attribute_loader(self, toload, passive)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

mapper = <Mapper at 0x7f09968751d0; AnalysisJob>
state = <sqlalchemy.orm.state.InstanceState object at 0x7f0996554410>
attribute_names = {'completed_at', 'created_at', 'error_message', 'filename', 'id', 'original_filename', ...}
passive = symbol('PASSIVE_OFF')

    def load_scalar_attributes(mapper, state, attribute_names, passive):
        """initiate a column-based attribute refresh operation."""
    
        # assert mapper is _state_mapper(state)
        session = state.session
        if not session:
>           raise orm_exc.DetachedInstanceError(
                "Instance %s is not bound to a Session; "
                "attribute refresh operation cannot proceed" % (state_str(state))
            )
E           sqlalchemy.orm.exc.DetachedInstanceError: Instance <AnalysisJob at 0x7f0996936610> is not bound to a Session; attribute refresh operation cannot proceed (Background on this error at: https://sqlalche.me/e/20/bhk3)

.pythonlibs/lib/python3.11/site-packages/sqlalchemy/orm/loading.py:1603: DetachedInstanceError
____________________________ TestOutputFileModel.test_job_output_relationship _____________________________

self = <test_models.TestOutputFileModel object at 0x7f09965a39d0>, test_app = <Flask 'app'>
analysis_job = <AnalysisJob test-job-789>

    def test_job_output_relationship(self, test_app, analysis_job):
        """Test relationship between jobs and output files"""
        with test_app.app_context():
            # Create multiple output files for the job
            for i in range(3):
                output_file = OutputFile()
>               output_file.job_id = analysis_job.id
                                     ^^^^^^^^^^^^^^^

tests/test_models.py:205: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
.pythonlibs/lib/python3.11/site-packages/sqlalchemy/orm/attributes.py:566: in __get__
    return self.impl.get(state, dict_)  # type: ignore[no-any-return]
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^
.pythonlibs/lib/python3.11/site-packages/sqlalchemy/orm/attributes.py:1086: in get
    value = self._fire_loader_callables(state, key, passive)
            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
.pythonlibs/lib/python3.11/site-packages/sqlalchemy/orm/attributes.py:1116: in _fire_loader_callables
    return state._load_expired(state, passive)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
.pythonlibs/lib/python3.11/site-packages/sqlalchemy/orm/state.py:803: in _load_expired
    self.manager.expired_attribute_loader(self, toload, passive)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

mapper = <Mapper at 0x7f09968751d0; AnalysisJob>
state = <sqlalchemy.orm.state.InstanceState object at 0x7f09965547d0>
attribute_names = {'completed_at', 'created_at', 'error_message', 'filename', 'id', 'original_filename', ...}
passive = symbol('PASSIVE_OFF')

    def load_scalar_attributes(mapper, state, attribute_names, passive):
        """initiate a column-based attribute refresh operation."""
    
        # assert mapper is _state_mapper(state)
        session = state.session
        if not session:
>           raise orm_exc.DetachedInstanceError(
                "Instance %s is not bound to a Session; "
                "attribute refresh operation cannot proceed" % (state_str(state))
            )
E           sqlalchemy.orm.exc.DetachedInstanceError: Instance <AnalysisJob at 0x7f099657bf50> is not bound to a Session; attribute refresh operation cannot proceed (Background on this error at: https://sqlalche.me/e/20/bhk3)

.pythonlibs/lib/python3.11/site-packages/sqlalchemy/orm/loading.py:1603: DetachedInstanceError
_________________________________ TestModelValidation.test_eip_job_index __________________________________

self = <test_models.TestModelValidation object at 0x7f09965a0890>, test_app = <Flask 'app'>
analysis_job = <AnalysisJob test-job-789>

    def test_eip_job_index(self, test_app, analysis_job):
        """Test EIP-job compound index functionality"""
        with test_app.app_context():
            # Create two sentiment records for same EIP in same job
            sentiment1 = EIPSentiment()
>           sentiment1.job_id = analysis_job.id
                                ^^^^^^^^^^^^^^^

tests/test_models.py:254: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
.pythonlibs/lib/python3.11/site-packages/sqlalchemy/orm/attributes.py:566: in __get__
    return self.impl.get(state, dict_)  # type: ignore[no-any-return]
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^
.pythonlibs/lib/python3.11/site-packages/sqlalchemy/orm/attributes.py:1086: in get
    value = self._fire_loader_callables(state, key, passive)
            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
.pythonlibs/lib/python3.11/site-packages/sqlalchemy/orm/attributes.py:1116: in _fire_loader_callables
    return state._load_expired(state, passive)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
.pythonlibs/lib/python3.11/site-packages/sqlalchemy/orm/state.py:803: in _load_expired
    self.manager.expired_attribute_loader(self, toload, passive)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

mapper = <Mapper at 0x7f09968751d0; AnalysisJob>
state = <sqlalchemy.orm.state.InstanceState object at 0x7f09961971d0>
attribute_names = {'completed_at', 'created_at', 'error_message', 'filename', 'id', 'original_filename', ...}
passive = symbol('PASSIVE_OFF')

    def load_scalar_attributes(mapper, state, attribute_names, passive):
        """initiate a column-based attribute refresh operation."""
    
        # assert mapper is _state_mapper(state)
        session = state.session
        if not session:
>           raise orm_exc.DetachedInstanceError(
                "Instance %s is not bound to a Session; "
                "attribute refresh operation cannot proceed" % (state_str(state))
            )
E           sqlalchemy.orm.exc.DetachedInstanceError: Instance <AnalysisJob at 0x7f09965b8310> is not bound to a Session; attribute refresh operation cannot proceed (Background on this error at: https://sqlalche.me/e/20/bhk3)

.pythonlibs/lib/python3.11/site-packages/sqlalchemy/orm/loading.py:1603: DetachedInstanceError
============================================ warnings summary =============================================
tests/test_models.py::TestUserModel::test_user_creation
  /home/runner/workspace/tests/test_models.py:27: LegacyAPIWarning: The Query.get() method is considered legacy as of the 1.x series of SQLAlchemy and becomes a legacy construct in 2.0. The method is now available as Session.get() (deprecated since: 2.0) (Background on SQLAlchemy 2.0 at: https://sqlalche.me/e/b8d9)
    retrieved_user = User.query.get('test-123')

tests/test_models.py::TestUserModel::test_admin_user_creation
  /home/runner/workspace/tests/test_models.py:43: LegacyAPIWarning: The Query.get() method is considered legacy as of the 1.x series of SQLAlchemy and becomes a legacy construct in 2.0. The method is now available as Session.get() (deprecated since: 2.0) (Background on SQLAlchemy 2.0 at: https://sqlalche.me/e/b8d9)
    retrieved_admin = User.query.get('admin-456')

tests/test_models.py::TestAnalysisJobModel::test_job_creation
  /home/runner/workspace/tests/test_models.py:66: LegacyAPIWarning: The Query.get() method is considered legacy as of the 1.x series of SQLAlchemy and becomes a legacy construct in 2.0. The method is now available as Session.get() (deprecated since: 2.0) (Background on SQLAlchemy 2.0 at: https://sqlalche.me/e/b8d9)
    retrieved_job = AnalysisJob.query.get('job-789')

tests/test_models.py::TestAnalysisJobModel::test_job_status_updates
  /home/runner/workspace/tests/test_models.py:89: LegacyAPIWarning: The Query.get() method is considered legacy as of the 1.x series of SQLAlchemy and becomes a legacy construct in 2.0. The method is now available as Session.get() (deprecated since: 2.0) (Background on SQLAlchemy 2.0 at: https://sqlalche.me/e/b8d9)
    updated_job = AnalysisJob.query.get('job-update-test')

tests/test_models.py::TestAnalysisJobModel::test_job_completion
  /home/runner/workspace/tests/test_models.py:111: LegacyAPIWarning: The Query.get() method is considered legacy as of the 1.x series of SQLAlchemy and becomes a legacy construct in 2.0. The method is now available as Session.get() (deprecated since: 2.0) (Background on SQLAlchemy 2.0 at: https://sqlalche.me/e/b8d9)
    completed_job = AnalysisJob.query.get('job-complete-test')

-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html
========================================= short test summary info =========================================
FAILED tests/test_models.py::TestUserModel::test_user_string_representation - sqlalchemy.orm.exc.DetachedInstanceError: Instance <User at 0x7f099656ee90> is not bound to a Session;...
FAILED tests/test_models.py::TestEIPSentimentModel::test_eip_sentiment_creation - sqlalchemy.orm.exc.DetachedInstanceError: Instance <AnalysisJob at 0x7f099616e550> is not bound to a S...
FAILED tests/test_models.py::TestEIPSentimentModel::test_eip_sentiment_filtering - sqlalchemy.orm.exc.DetachedInstanceError: Instance <AnalysisJob at 0x7f09965a2f90> is not bound to a S...
FAILED tests/test_models.py::TestEIPSentimentModel::test_negative_sentiment_filtering - sqlalchemy.orm.exc.DetachedInstanceError: Instance <AnalysisJob at 0x7f09968e9410> is not bound to a S...
FAILED tests/test_models.py::TestOutputFileModel::test_output_file_creation - sqlalchemy.orm.exc.DetachedInstanceError: Instance <AnalysisJob at 0x7f0996936610> is not bound to a S...
FAILED tests/test_models.py::TestOutputFileModel::test_job_output_relationship - sqlalchemy.orm.exc.DetachedInstanceError: Instance <AnalysisJob at 0x7f099657bf50> is not bound to a S...
FAILED tests/test_models.py::TestModelValidation::test_eip_job_index - sqlalchemy.orm.exc.DetachedInstanceError: Instance <AnalysisJob at 0x7f09965b8310> is not bound to a S...
================================ 7 failed, 6 passed, 5 warnings in 10.99s =================================
~/workspace$ 